@page "/inventories/add"

@inject IAddInventoryUseCase AddInventoryUseCase
@inject NavigationManager NavigationManager

<h3 class="pb-3">Add Inventory</h3>

<EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Save">

	<DataAnnotationsValidator />
@* 	<ValidationSummary /> *@
	<div class="form-group">
		<label for="name">Inventory Name</label>
		<InputText 
			id="name"
			@bind-Value="inventory.Name" 
			class="form-control" />
		<ValidationMessage For="@(() => inventory.Name)" />
	</div>

	<div class="form-group">
		<label for="quantity">Quantity</label>
		<InputNumber 
			id="quantity"
			@bind-Value="inventory.Quantity"
			class="form-control" />
		<ValidationMessage For="@(() => inventory.Quantity)" />
	</div>

	<div class="form-group">
		<label for="price">Price</label>
		<InputNumber 
			id="price"
			@bind-Value="inventory.Price"
			class="form-control" />
		<ValidationMessage For="@(() => inventory.Price)" />
	</div>

	<button type="submit" class="btn btn-primary mt-3">Save</button>

	<a href="/inventories" class="btn btn-warning mt-3">Cancel</a>

</EditForm>

@code {
	[SupplyParameterFromForm(FormName = "formInventory")]
	private Inventory? inventory { get; set; }


	private async Task Save()
	{
		if (inventory is not null)
		{
			await AddInventoryUseCase.ExecuteAsync(inventory);
			NavigationManager.NavigateTo("/inventories");
		}
	}
}
