@inject ILogger<InventoryListItemComponent> Logger
@inject IDeleteInventoryUseCase DeleteInventoryUseCase

@if (this.Inventory is not null)
{
	<tr>
		<td>@Inventory.Name</td>
		<td>@Inventory.Quantity</td>
		<td>@Inventory.Price</td>
		<td>
			<a class="btn btn-light"
			   href="/inventories/edit/@Inventory.Id">Edit</a>
			<button class="btn btn-warning" type="button" @onclick="OnButtonClick">Delete</button>
		</td>
	</tr>
}

@code {
	[Parameter]
	public Inventory? Inventory { get; set; }

	[Parameter]
	public EventCallback OnDeleted { get; set; }


	protected override async Task OnInitializedAsync()
	{
		Logger.LogDebug("InventoryListItemComponent.OnInitialized()");
		await base.OnInitializedAsync();
	}

	private async Task OnButtonClick(MouseEventArgs args)
	{
		Logger.LogDebug("InventoryListItemComponent.OnButtonClick()");
		
		if (Inventory is not null)
		{
			await DeleteInventoryUseCase.ExecuteAsync(Inventory);
			await OnDeleted.InvokeAsync();

		}
	}
}
